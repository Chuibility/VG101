function Newton() 
    syms x;
    num=struct('d1','','d2','','d3','');
    num(1).d1='one';
    num(2).d1='two';
    num(3).d1='three';
    num(4).d1='four';
    num(5).d1='five';
    num(6).d1='six';
    num(7).d1='seven';
    num(8).d1='eight';
    num(9).d1='nine';
    num(1).d2='ten';
    num(2).d2='twenty';
    num(3).d2='thirty';
    num(4).d2='forty';
    num(5).d2='fifty';
    num(6).d2='sixty';
    num(7).d2='seventy';
    num(8).d2='eighty';
    num(9).d2='ninety';
    num(1).d3='eleven';
    num(2).d3='twelve';
    num(3).d3='thirteen';
    num(4).d3='fourteen';
    num(5).d3='fifteen';
    num(6).d3='sixteen';
    num(7).d3='seventeen';
    num(8).d3='eighteen';
    num(9).d3='nineteen';
    while(true)
        str=input('Input function:','s');
        if(strcmp(str,'I LOVE LAB'))
            break;
        end
        n=0;
        for i=1:100
            n(i)=0;
        end
        nm=1;
        na=0;
        naa=1;
        nb=0;
        nbb=1;
        flag=false;
        str=[str,'#'];
        if(str(1)~='-')
            str=['+',str];
        end
        for i=1:length(str)
            if(str(i)>='0'&&str(i)<='9')
                na(naa)=na(naa)*10+str(i)-'0';
                if(nbb>1)
                    if(nb(nbb-1)~='@')
                        nb(nbb)='@';
                        nbb=nbb+1;
                    end
                else
                    nb(nbb)='@';
                    nbb=nbb+1;
                end
            elseif(str(i)=='+'||str(i)=='-'||str(i)=='^'||str(i)=='x'||str(i)=='#')
                nb(nbb)=str(i);
                if(na(naa)~=0)
                    naa=naa+1;
                    na(naa)=0;
                end
                if((str(i)=='+'||str(i)=='-'||str(i)=='#')&&i~=1)
                    mi=0;
                    if(nb(nbb-1)=='x')
                        mi=1;
                    end
                    if(nb(nbb-1)=='@')
                        if(nb(nbb-2)=='^')
                            if(nb(nbb-3)=='x')
                                naa=naa-1;
                                mi=na(naa);
                                if(mi>nm)
                                    nm=mi;
                                end
                                na(naa)=0;
                                nbb=nbb-2;
                            else
                                flag=true;
                                break;
                            end
                        elseif(nb(nbb-2)=='+')
                            naa=naa-1;
                            n(1)=n(1)+na(naa);
                            na(naa)=0;
                            nbb=nbb-2;
                        elseif(nb(nbb-2)=='-')
                            naa=naa-1;
                            n(1)=n(1)-na(naa);
                            na(naa)=0;
                            nbb=nbb-2;
                        else
                            flag=true;
                            break;
                        end
                    end
                    if(nbb>1)
                        if(nb(nbb-1)=='x')
                            nn=1;
                            if(nb(nbb-2)=='@')
                                nn=na(naa-1);
                                if(nb(nbb-3)=='+'||nb(nbb-3)=='-')
                                    naa=naa-1;
                                    na(naa)=0;
                                    if(nb(nbb-3)=='+')
                                        n(mi+1)=n(mi+1)+nn;
                                    else
                                        n(mi+1)=n(mi+1)-nn;
                                    end
                                    nbb=nbb-3;
                                    nb(nbb)=str(i);
                                else
                                    flag=true;
                                    break;
                                end
                            elseif(nb(nbb-2)=='+'||nb(nbb-2)=='-')
                                if(nb(nbb-2)=='+')
                                    n(mi+1)=n(mi+1)+nn;
                                else
                                    n(mi+1)=n(mi+1)-nn;
                                end
                                nbb=nbb-2;
                                nb(nbb)=str(i);
                            else
                                flag=true;
                                break;
                            end
                        else
                            flag=true;
                            break;
                        end
                    end
                elseif(str(i)=='^')
                    if(nb(nbb-1)~='x')
                        flag=true;
                        break;
                    end
                elseif(str(i)~='x'&&i~=1)
                    if(nb(nbb-1)~='+'&&nb(nbb-1)~='-'&&nb(nbb-1)~='@')
                        flag=true;
                        break;
                    end
                end
                nbb=nbb+1;
            end
        end
        if(flag)
            disp('expression error');
        else 
            str='';
            for i=nm+1:-1:1
                if(n(i)>0)
                    str=[str,'+',num2str(n(i)),'*x^',num2str(i-1)];
                elseif(n(i)<0)
                    str=[str,num2str(n(i)),'*x^',num2str(i-1)];
                end
            end
            f(x)=sym(str);
            str=input('Input accuracy:','s');
            acc=str2num(str);
            g(x)=diff(f(x));
            b=rand();
            flag=false;
            t1=cputime;
            while(true)
                a=b;
                y=double(f(a));
                k=double(g(a));
                b=-y/k+a;
                if(abs(a-b)<acc)
                    flag=true;
                    break;
                end
                if(cputime-t1>5)
                    break;
                end
            end
            str2='';
            start=true;
            for i=nm+1:-1:1
                if(n(i)~=0)
                    if(n(i)>0)
                        if(start==false)
                            str2=[str2,'plus '];
                        end
                    elseif(n(i)<0)
                        str2=[str2,'minus '];
                    end
                    start=false;
                    if(abs(n(i))~=1)
                        if(abs(n(i))<=9)
                            str3=num(abs(n(i))).d1;
                        elseif(mod(abs(n(i)),10)==0)
                            str3=num(abs(n(i))/10).d2;
                        elseif(abs(n(i))<=19)
                            str3=num(abs(n(i))-10).d3;
                        else
                            str3=[num(floor(abs(n(i))/10)).d2,'-',num(mod(abs(n(i)),10)).d1];
                        end
                        if(i==1)
                            str2=[str2,str3];
                        else
                            str2=[str2,str3,' times x '];
                        end
                    else
                        if(i==1)
                            str2=[str2,'one'];
                        else
                            str2=[str2,'x '];
                        end
                    end
                    if(i==3)
                        str2=[str2,'squared '];
                    elseif(i==4)
                        str2=[str2,'cubed '];
                    elseif(i>4)
                        str2=[str2,'to the ',num2str(i-1),'th power '];
                    end
                end
            end
            if(flag)
                str2=sprintf(['a approximate zero point of y equals to %s is %.',num2str(floor(-log10(acc))),'f.'],str2,b);
            else
                str2=['the zero point of y equals to ',str2,' can''t be calculated.'];
            end
            disp(str2);
        end
    end
end